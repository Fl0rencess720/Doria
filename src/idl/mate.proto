syntax = "proto3";

package mate;

option go_package = "rpc/mate";

service MateService {
    rpc Chat(ChatRequest) returns (ChatResponse);
    rpc ChatStream(ChatRequest) returns (stream ChatStreamResponse);
    rpc GetConversationMessages(GetConversationMessagesRequest) returns (GetConversationMessagesResponse);
    rpc GetUserPages(GetUserPagesRequest) returns (GetUserPagesResponse);
}

message ChatRequest {
    int32 user_id = 1;
    string prompt = 2;
}

message ChatResponse {
    string message = 1;
}

message ChatStreamResponse {
    string content = 1;
    string message_id = 2;
    int64 timestamp = 3;
    bool finished = 4;
}

message Message {
    string role = 1;
    string content = 2;
    int64 create_time = 3;
}

message GetConversationMessagesRequest {
    int32 user_id = 1;
}

message GetConversationMessagesResponse {
    repeated Message messages = 1;
}

message Page {
    uint32 id = 1;
    uint32 user_id = 2;
    uint32 segment_id = 3;
    string user_input = 4;
    string agent_output = 5;
    string status = 6;
    int64 create_time = 7;
}

message GetUserPagesRequest {
    int32 user_id = 1;
    string cursor = 2;
    int32 page_size = 3;
}

message GetUserPagesResponse {
    repeated Page pages = 1;
    string next_cursor = 2;
    bool has_more = 3;
}